// Generated by Haxe 3.3.0
(function () { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var qx_TestClass = function() {
	qx.core.Object.call(this);
};
qx_TestClass.__super__ = qx.core.Object;
qx_TestClass.prototype = $extend(qx.core.Object.prototype,{
	toHashCode: function() {
		return this.base(arguments);
	}
});
var qx_Main = function() { };
qx_Main.main = function() {
	var obj = new qx.core.Object();
	obj.addListener("test",function() {
		console.log("test");
	});
	obj.base(arguments,"test");
	obj.base(arguments);
	obj.self(arguments).test();
	obj.debug("Test");
	obj.set({ a : 5, b : "xxx"});
	obj.dispose();
	var str = qx.util.Base64.encode("abcde");
	qx.core.Init.getApplication();
	null._createRootWidget();
	var store = new qx.data.store.Jsonp();
	store.reload();
	store.addListener(({ name : "loaded", type : "qx.event.type.Data"}).name,function(ev) {
		console.log("test");
	});
	new qx.core.Wrapper().push({ a : 5});
	console.log(str);
};
qx_Main.main();
})();
